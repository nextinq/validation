{
	// Place your BT.Partner.FrontEnd workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"jit": {
		"scope": "javascript,typescript",
		"prefix": "jest-it",
		"body": [
			"it('${1:name}', () => {",
			"\t$2",
			"});"
		],
		"description": "Test example"
	},
	"jait": {
		"scope": "javascript,typescript",
		"prefix": "jest-async-it",
		"body": [
			"it('${1:name}', async () => {",
			"\t$2",
			"});"
		],
		"description": "Test example"
	},
	"jds": {
		"scope": "javascript,typescript",
		"prefix": "jest-describe",
		"body": [
			"describe('${1:name}', () => {",
			"\t$2",
			"});"
		],
		"description": "Test example"
	},
	"cmp": {
		"scope": "typescriptreact",
		"prefix": "component, react-component",
		"body": [
			"import React from 'react';",
			"",
			"interface ${TM_FILENAME_BASE/((^[a-z])|-([a-z]))/${2:/upcase}${3:/upcase}/g}Props {}",
			"",
			"export function ${TM_FILENAME_BASE/((^[a-z])|-([a-z]))/${2:/upcase}${3:/upcase}/g}(props: ${TM_FILENAME_BASE/((^[a-z])|-([a-z]))/${2:/upcase}${3:/upcase}/g}Props) {",
			"\treturn (",
			"\t\t<>${1:$TM_FILENAME_BASE}</>",
			"\t);",
			"}",
			""
		],
		"description": "React component snippet"
	},
}